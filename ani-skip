#!/bin/sh

agent="Mozilla/5.0 (Windows NT 6.1; Win64; rv:109.0) Gecko/20100101 Firefox/109.0"
lua_script="$HOME/.config/mpv/scripts/skip.lua"

die() {
    printf "\33[2K\r\033[1;31m%s\033[0m\n" "$*" >&2
    exit 1
}

update_script() {
    update="$(curl -s -A "$agent" "https://raw.githubusercontent.com/synacktraa/ani-skip/master/ani-skip")" || die "Connection error"
    update="$(printf '%s\n' "$update" | diff -u "$0" -)"
    if [ -z "$update" ]; then
        printf "Script is up to date :)\n"
    else
        if printf '%s\n' "$update" | patch "$0" -; then
            printf "Script has been updated\n"
        else
            die "Can't update for some reason!"
        fi
    fi
    exit 0
}

build_options(){
    greppable='"start_time":([0-9.]+),"end_time":([0-9.]+)},"skip_type":"('$1')"'
    unformatted=$(printf "%s" "$2" | grep -Eo $greppable)
    printf "%s" "$unformatted" | sed -E 's@'$greppable'@skip-\3_start=\1,skip-\3_end=\2@'
}

get_skip_times() {
        [ ! -f "$lua_script" ] && die "'skip.lua' script not found!"

        name=$(printf "%s" "$1" | sed -E "s@(.+\b)( \().*@\1@")
        keyword=$(printf "%s" "$name" | sed -E 's| |%20|g')
        mal_metadata=$(curl -s --connect-timeout 5 -A "$agent" "https://myanimelist.net/search/prefix.json?type=anime&keyword=$keyword")
        mal_id=$(printf "%s\n" "$mal_metadata" | grep -Eo '"id"[^}]+'| sed -E 's@"id":([0-9]{1,}),.+name":"([^"]+).+@\2|\1@g'| grep -Eo "^$name\|.*" | sed -E "s@.+\|(.+)@\1@")
        [ -z "$mal_id" ] && die "MyAnimeList ID not found!"

        ani_skip_metadata=$(curl -s --connect-timeout 5 -A "$agent" "https://api.aniskip.com/v1/skip-times/$mal_id/$2?types=op&types=ed")
        found_status=$(printf "%s" "$ani_skip_metadata" | sed -n 's/.*"found":\([^,]*\).*/\1/p')
        [ "$found_status" = "false" ] && die "Skip times not found!"

        op_options=$(build_options "op" "$ani_skip_metadata")
        ed_options=$(build_options "ed" "$ani_skip_metadata")
        [ ! -z "$op_options" ] && [ ! -z "$ed_options" ] && op_options="$op_options,"

        skip_flag="--script-opts=$op_options$ed_options '--script=$lua_script'"
}

[ "$#" -eq 1 ] && [ "$1" = "-U" ] && update_script
[ "$#" -ne 2 ] && printf "%s [\"title\"] [ep]\n" "${0##*/}" && exit 0

get_skip_times "$1" "$2"
printf '%s' "$skip_flag"
