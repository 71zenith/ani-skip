#!/bin/sh

die() {
    printf "\33[2K\r\033[1;31m%s\033[0m\n" "$*" >&2
    exit 1
}

update_script() {
    update="$(curl -s -A "$agent" "https://raw.githubusercontent.com/synacktraa/ani-skip/master/ani-skip")" || die "Connection error"
    update="$(printf '%s\n' "$update" | diff -u "$0" -)"
    if [ -z "$update" ]; then
        printf "Script is up to date :)\n"
    else
        if printf '%s\n' "$update" | patch "$0" -; then
            printf "Script has been updated\n"
        else
            die "Can't update for some reason!"
        fi
    fi
    exit 0
}

get_skip_times() {
        lua_script="$HOME/.config/mpv/scripts/skip.lua"
        [ ! -f "$lua_script" ] && printf "\033[1;31m'skip.lua' script not found!\033[0m\n" 1>&2 && return 1

        name=$(printf "%s" "$title" | sed -E "s@(.+\b)( \().*@\1@")
        keyword=$(printf "%s" "$name" | sed -E 's| |%20|g')
        mal_id=$(curl -s "https://myanimelist.net/search/prefix.json?type=anime&keyword=$keyword" | jq .categories[].items[0].id)
        [ -z "$mal_id" ] && printf "\033[1;31mMyAnimeList ID not found!\033[0m\n" 1>&2 && return 1

        aniskip_output=$(curl -s "https://api.aniskip.com/v1/skip-times/$mal_id/$ep_no?types[]=op")
        found_status=$(printf "%s" "$aniskip_output" | jq .found)
        [ "$found_status" = "false" ] && printf "\033[1;31mSkip times not found!\033[0m\n" 1>&2 && return 1
        
        start_time=$(echo $aniskip_output | jq .results[].interval.start_time)
        end_time=$(echo $aniskip_output | jq .results[].interval.end_time)
        options="skip-start_time=$start_time,skip-end_time=$end_time"
        skip_flag="--script-opts=$options --script=$lua_script"
}

[ "$#" -eq 1 ] && [ "$1" = "-U" ] && update_script
[ "$#" -ne 2 ] && die "${0##*/} [\"title\"] [ep]"

title="$1" ep_no="$2" get_skip_times
printf "%s" "$skip_flag"